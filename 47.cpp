#include <iostream>
#include <algorithm>
using namespace std;

vector<long> primes={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863}; // first 150 primes should do it

bool isPrime(long i)
{
	for(long j=2;j<=sqrt(abs(i));++j)
	{
		if(i%j==0) return false;
	}
	return true;
}

long getDistinctFactors(const long i)
{
	long retval=0,n=i;
	for(long j:primes)
	{
		if(n%j==0)
		{
			while(n%j==0) n/=j;
			++retval;
		}
	}
	return retval;
}

int main()
{
	long i=0,j=0,k=0,l=0;
	for(long n=600;;++n)
	{
		i=j;j=k;k=l;l=getDistinctFactors(n);
		if(l!=4) n+=3;
		if((i==j)&&(j==k)&&(k==l)&&(l==4)) { cout << n-3 << endl; return 0; }
	}	
}

// 134043
